From 94579bcb9306c33effa2a6a37f28d355fcd7733d Mon Sep 17 00:00:00 2001
From: Vaisakh Murali <mvaisakh@statixos.com>
Date: Tue, 10 May 2022 13:37:43 +0000
Subject: [PATCH] Squashed revert of FOD changes for OOS

Revert "drm: msm: sde: Translate zpos property to cust property"

This reverts commit 319bd5e0edff1189e20cb69afb4b17e9e40e6737.

Revert "drm: Allow hooking dim when screen goes on"

This reverts commit 37a23525d144f263595c2c61ebd3fd772130c5d6.

Revert "drm: Expose power status to userspace"

This reverts commit 7994c6f251fd6dbabd8a9bbfe7fa73ffcc721ddb.

Revert "drm: Implement panel status check"

This reverts commit f279c1214d65b5f4cf97072c30690fdf0bf24952.

Revert "drm: Handle dim for udfps"

This reverts commit 1f579a528c120f617192a36e4c67a89658e276be.

Revert "drm: msm: Refactor fod dimming"

This reverts commit 9dc574e46a781409e4581ed538ae30ca28212e3a.

Revert "drm: msm: Rework PLANE_PROP_ALPHA handling"

This reverts commit 47eac9909afa36ee03651ae8b95cdec11893f736.
---
 drivers/gpu/drm/drm_sysfs.c                 | 35 -----------
 drivers/gpu/drm/msm/dsi-staging/dsi_panel.c | 29 +--------
 drivers/gpu/drm/msm/sde/sde_crtc.c          | 68 +++++++++++++--------
 drivers/gpu/drm/msm/sde/sde_plane.c         | 38 ++++++------
 include/uapi/drm/sde_drm.h                  |  5 --
 5 files changed, 61 insertions(+), 114 deletions(-)

diff --git a/drivers/gpu/drm/drm_sysfs.c b/drivers/gpu/drm/drm_sysfs.c
index caa1cfd65562..a67a0f21445f 100644
--- a/drivers/gpu/drm/drm_sysfs.c
+++ b/drivers/gpu/drm/drm_sysfs.c
@@ -1221,37 +1221,6 @@ static ssize_t oneplus_display_set_forcescreenfp(struct device *dev,
 	return count;
 }
 
-int oneplus_auth_status = 0;
-int oneplus_panel_status = 0;
-static ssize_t op_display_get_auth_status(struct device *dev,
-				struct device_attribute *attr, char *buf)
-{
-	return sprintf(buf, "%d\n", oneplus_auth_status);
-}
-
-static ssize_t op_display_set_auth_status(struct device *dev,
-				struct device_attribute *attr,
-				const char *buf, size_t count)
-{
-	sscanf(buf, "%d", &oneplus_auth_status);
-
-	return count;
-}
-
-static ssize_t op_display_get_power_status(struct device *dev,
-				struct device_attribute *attr, char *buf)
-{
-	return sprintf(buf, "%d\n", oneplus_panel_status);
-}
-
-static ssize_t op_display_set_power_status(struct device *dev,
-				struct device_attribute *attr,
-				const char *buf, size_t count)
-{
-	sscanf(buf, "%d", &oneplus_panel_status);
-
-	return count;
-}
 
 static ssize_t op_display_get_dimlayer_enable(struct device *dev,
 				struct device_attribute *attr, char *buf)
@@ -1352,8 +1321,6 @@ static DEVICE_ATTR(notify_aod, S_IRUGO|S_IWUSR, NULL, oneplus_display_notify_aod
 static DEVICE_ATTR(dimlayer_bl_en, S_IRUGO|S_IWUSR, op_display_get_dimlayer_enable, op_display_set_dimlayer_enable);
 static DEVICE_ATTR(dp_en, S_IRUGO|S_IWUSR, op_display_get_dp_enable, op_display_set_dp_enable);
 static DEVICE_ATTR(dither_en, S_IRUGO|S_IWUSR, op_display_get_dither_enable, op_display_set_dither_enable);
-static DEVICE_ATTR(auth_status, S_IRUGO|S_IWUSR, op_display_get_auth_status, op_display_set_auth_status);
-static DEVICE_ATTR(power_status, S_IRUGO|S_IWUSR, op_display_get_power_status, op_display_set_power_status);
 
 static struct attribute *connector_dev_attrs[] = {
 	&dev_attr_status.attr,
@@ -1391,8 +1358,6 @@ static struct attribute *connector_dev_attrs[] = {
 	&dev_attr_dimlayer_bl_en.attr,
 	&dev_attr_dp_en.attr,
 	&dev_attr_dither_en.attr,
-	&dev_attr_auth_status.attr,
-	&dev_attr_power_status.attr,
 	NULL
 };
 
diff --git a/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c b/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c
index 81521630723f..10ef209d0199 100644
--- a/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c
+++ b/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c
@@ -4658,7 +4658,6 @@ int dsi_panel_update_pps(struct dsi_panel *panel)
 	return rc;
 }
 
-extern int oneplus_panel_status;
 int dsi_panel_set_lp1(struct dsi_panel *panel)
 {
 	int rc = 0;
@@ -4690,7 +4689,6 @@ int dsi_panel_set_lp1(struct dsi_panel *panel)
 		       panel->name, rc);
 
 	panel->need_power_on_backlight = true;
-	oneplus_panel_status = 3; // DISPLAY_POWER_DOZE
 
 exit:
 	mutex_unlock(&panel->panel_lock);
@@ -4714,7 +4712,6 @@ int dsi_panel_set_lp2(struct dsi_panel *panel)
 	if (rc)
 		pr_err("[%s] failed to send DSI_CMD_SET_LP2 cmd, rc=%d\n",
 		       panel->name, rc);
-	oneplus_panel_status = 4; // DISPLAY_POWER_DOZE_SUSPEND
 exit:
 	mutex_unlock(&panel->panel_lock);
 	return rc;
@@ -4745,7 +4742,6 @@ int dsi_panel_set_nolp(struct dsi_panel *panel)
 	if (rc)
 		pr_err("[%s] failed to send DSI_CMD_SET_NOLP cmd, rc=%d\n",
 		       panel->name, rc);
-	oneplus_panel_status = 2; // DISPLAY_POWER_ON
 exit:
 	mutex_unlock(&panel->panel_lock);
 	return rc;
@@ -5080,12 +5076,6 @@ int dsi_panel_post_switch(struct dsi_panel *panel)
 bool aod_fod_flag;
 bool aod_complete;
 bool real_aod_mode;
-
-extern bool oneplus_dimlayer_hbm_enable;
-bool backup_dimlayer_hbm = false;
-extern int oneplus_auth_status;
-extern int oneplus_dim_status;
-int backup_dim_status = 0;
 int dsi_panel_enable(struct dsi_panel *panel)
 {
 	int rc = 0;
@@ -5129,22 +5119,8 @@ int dsi_panel_enable(struct dsi_panel *panel)
 	}
 
 	panel->panel_initialized = true;
-	oneplus_panel_status = 2; // DISPLAY_POWER_ON
 	pr_err("dsi_panel_enable aod_mode =%d\n",panel->aod_mode);
 
-	if (oneplus_auth_status == 2) {
-		backup_dimlayer_hbm = 0;
-		backup_dim_status = 0;
-	} else if (oneplus_auth_status == 1) {
-		backup_dimlayer_hbm = 1;
-		backup_dim_status = 1;
-	}
-	oneplus_dimlayer_hbm_enable = backup_dimlayer_hbm;
-	oneplus_dim_status = backup_dim_status;
-	if (oneplus_auth_status != 2)
-		pr_err("Restore dim when panel goes on");
-	oneplus_auth_status = 0;
-
 	blank = MSM_DRM_BLANK_UNBLANK_CHARGE;
 	notifier_data.data = &blank;
 	notifier_data.id = connector_state_crtc_index;
@@ -5219,9 +5195,7 @@ int dsi_panel_disable(struct dsi_panel *panel)
 
 	/* Avoid sending panel off commands when ESD recovery is underway */
 	if (!atomic_read(&panel->esd_recovery_pending)) {
-		oneplus_dimlayer_hbm_enable = false;
-		oneplus_dim_status = 0;
-		pr_err("Kill dim when panel goes off");
+
 		HBM_flag = false;
 	if(panel->aod_mode==2){
 			panel->aod_status=1;
@@ -5255,7 +5229,6 @@ int dsi_panel_disable(struct dsi_panel *panel)
 	}
 	panel->panel_initialized = false;
 	panel->power_mode = SDE_MODE_DPMS_OFF;
-	oneplus_panel_status = 0; // DISPLAY_POWER_OFF
 
 	mutex_unlock(&panel->panel_lock);
 	printk(KERN_ERR"dsi_panel_disable --\n");
diff --git a/drivers/gpu/drm/msm/sde/sde_crtc.c b/drivers/gpu/drm/msm/sde/sde_crtc.c
index f1a227000d5f..8de83990604d 100644
--- a/drivers/gpu/drm/msm/sde/sde_crtc.c
+++ b/drivers/gpu/drm/msm/sde/sde_crtc.c
@@ -3412,7 +3412,6 @@ int bl_to_alpha_dc(int brightness)
 	return alpha;
 }
 
-bool oneplus_dimlayer_hbm_enable;
 int oneplus_get_panel_brightness_to_alpha(void)
 {
 	struct dsi_display *display = get_main_display();
@@ -3421,7 +3420,7 @@ int oneplus_get_panel_brightness_to_alpha(void)
 		return 0;
 	if (oneplus_panel_alpha)
 		return oneplus_panel_alpha;
-    if (oneplus_dimlayer_hbm_enable)
+    if (display->panel->dim_status)
 		return brightness_to_alpha(display->panel->hbm_backlight);
     else
 	return bl_to_alpha_dc(display->panel->hbm_backlight);
@@ -3510,9 +3509,6 @@ ssize_t oneplus_display_notify_fp_press(struct device *dev,
 	return count;
 }
 extern int aod_layer_hide;
-extern int oneplus_panel_status;
-extern int backup_dim_status;
-extern bool backup_dimlayer_hbm;
 extern bool HBM_flag;
 extern int dsi_panel_tx_cmd_set (struct dsi_panel *panel, enum dsi_cmd_set_type type);
 int oneplus_dim_status = 0;
@@ -3547,8 +3543,6 @@ int oneplus_aod_dc = 0;
 	dsi_connector = dsi_display->drm_conn;
 	mode_config = &drm_dev->mode_config;
 	sscanf(buf, "%du", &dim_status);
-	if (oneplus_panel_status == 0)
-		dim_status = 0;
 
 	if (dsi_display->panel->aod_status == 0 && (dim_status == 2)) {
 		pr_err("fp set it in normal status\n");
@@ -3572,9 +3566,6 @@ int oneplus_aod_dc = 0;
 	if (dim_status == oneplus_dim_status)
 		return count;
 	oneplus_dim_status = dim_status;
-	oneplus_dimlayer_hbm_enable = oneplus_dim_status != 0;
-	backup_dimlayer_hbm = oneplus_dimlayer_hbm_enable;
-	backup_dim_status = oneplus_dim_status;
 	pr_err("notify dim %d,aod = %d press= %d aod_hide =%d\n",
 		oneplus_dim_status, dsi_display->panel->aod_status, oneplus_onscreenfp_status, aod_layer_hide);
 	if (oneplus_dim_status == 1 && HBM_flag) {
@@ -5795,12 +5786,8 @@ static int sde_crtc_onscreenfinger_atomic_check(struct sde_crtc_state *cstate,
 	}
 
     aod_mode = oneplus_aod_hid;
-	if (oneplus_dim_status == 5 && display->panel->aod_status == 0) {
+	if (oneplus_dim_status == 5 && display->panel->aod_status == 0)
 		dim_mode = 0;
-		oneplus_dim_status = 0;
-		oneplus_dimlayer_hbm_enable = false;
-		pr_err("current dim = %d, oneplus_dimlayer_hbm_enable = %d\n", oneplus_dim_status, oneplus_dimlayer_hbm_enable);
-	}
 
 	for (i = 0; i < cnt; i++) {
 		mode = sde_plane_check_fingerprint_layer(pstates[i].drm_pstate);
@@ -5868,7 +5855,7 @@ static int sde_crtc_onscreenfinger_atomic_check(struct sde_crtc_state *cstate,
 		}
     }
 	SDE_DEBUG("fp_index=%d,fppressed_index=%d,aod_index=%d\n", fp_index, fppressed_index, aod_index);
-	if (oneplus_dimlayer_hbm_enable || oneplus_force_screenfp || dim_backlight == 1) {
+	if (fp_index >= 0 || fppressed_index >= 0 || oneplus_force_screenfp || dim_backlight == 1) {
 		if (fp_index >= 0 && fppressed_index >= 0) {
 			if (pstates[fp_index].stage >= pstates[fppressed_index].stage) {
 				SDE_ERROR("Bug!!@@@@: fp layer top of fppressed layer\n");
@@ -5905,16 +5892,46 @@ static int sde_crtc_onscreenfinger_atomic_check(struct sde_crtc_state *cstate,
 			zpos++;
 		}
 
-		if (oneplus_dimlayer_hbm_enable)
+		if (fp_index >= 0) {
+			if (dim_mode == 0) {
+				//pstates[fp_index].sde_pstate->property_values[PLANE_PROP_ALPHA].value = 0xff;
+				fp_index = -1;
+			}
+		}
+        	if (fppressed_index >= 0) {
+			if (fp_mode == 0) {
+				pstates[fppressed_index].sde_pstate->property_values[PLANE_PROP_ALPHA].value = 0;
+				if(oneplus_aod_fod == 1 && aod_index < 0) {
+					SDE_DEBUG("set reset pstate\n");
+					for (i = 0; i < cnt; i++) {
+						if(i!=fppressed_index ) {
+							if(pstates[i].sde_pstate->property_values[PLANE_PROP_ALPHA].value == 0){
+								pstates[i].sde_pstate->property_values[PLANE_PROP_ALPHA].value = 0xff;
+							}
+						}
+					}
+				}
+				fppressed_index = -1;
+			} else {
+				pstates[fppressed_index].sde_pstate->property_values[PLANE_PROP_ALPHA].value = 0xff;
+			}
+		}
+		if (aod_index >= 0) {
+			if (aod_mode ==1) {
+				SDE_DEBUG("aod layer hid");
+				SDE_ATRACE_BEGIN("aod_layer_hid");
+				pstates[aod_index].sde_pstate->property_values[PLANE_PROP_ALPHA].value = 0;
+				aod_index = -1;
+				SDE_ATRACE_END("aod_layer_hid");
+			}
+		}
+		if (fp_index >= 0)
 			cstate->fingerprint_mode = true;
 		else
 			cstate->fingerprint_mode = false;
 
-		if (fp_index >= 0)
-			pstates[fp_index].sde_pstate->property_values[PLANE_PROP_ALPHA].value = 0;
-
-		if (sde_crtc_config_fingerprint_dim_layer(&cstate->base, zpos)) {
-			//SDE_ERROR("Failed to config dim layer\n");
+		if ((fp_index >= 0 || dim_backlight > 0) && sde_crtc_config_fingerprint_dim_layer(&cstate->base, zpos)) {
+			SDE_ERROR("Failed to config dim layer\n");
 			return -EINVAL;
 		}
 		if (fppressed_index >= 0)
@@ -5923,7 +5940,6 @@ static int sde_crtc_onscreenfinger_atomic_check(struct sde_crtc_state *cstate,
 			cstate->fingerprint_pressed = false;
 		}
 	} else {
-		cstate->fingerprint_dim_layer = NULL;
 		cstate->fingerprint_pressed = false;
 		cstate->fingerprint_mode = false;
 		for (i = 0; i < cnt; i++) {
@@ -5932,10 +5948,8 @@ static int sde_crtc_onscreenfinger_atomic_check(struct sde_crtc_state *cstate,
 			}
 		}
     }
-	if (fp_mode == 1 && !oneplus_dimlayer_hbm_enable) {
-		cstate->fingerprint_mode = true;
-		cstate->fingerprint_pressed = true;
-		return 0;
+	if (fp_index < 0 && !dim_backlight) {
+		cstate->fingerprint_dim_layer = NULL;
 	}
 
 	return 0;
diff --git a/drivers/gpu/drm/msm/sde/sde_plane.c b/drivers/gpu/drm/msm/sde/sde_plane.c
index 569f0cd6958e..f17281f3cb19 100644
--- a/drivers/gpu/drm/msm/sde/sde_plane.c
+++ b/drivers/gpu/drm/msm/sde/sde_plane.c
@@ -4393,7 +4393,7 @@ static void _sde_plane_install_properties(struct drm_plane *plane,
 	const struct sde_format_extended *format_list;
 	struct sde_kms_info *info;
 	struct sde_plane *psde = to_sde_plane(plane);
-	int zpos_max = INT_MAX;
+	int zpos_max = 255;
 	int zpos_def = 0;
 	char feature_name[256];
 
@@ -4411,6 +4411,22 @@ static void _sde_plane_install_properties(struct drm_plane *plane,
 
 	psde->catalog = catalog;
 
+	if (sde_is_custom_client()) {
+		if (catalog->mixer_count &&
+				catalog->mixer[0].sblk->maxblendstages) {
+			zpos_max = catalog->mixer[0].sblk->maxblendstages - 1;
+
+			if (catalog->has_base_layer &&
+					(zpos_max > SDE_STAGE_MAX - 1))
+				zpos_max = SDE_STAGE_MAX - 1;
+			else if (zpos_max > SDE_STAGE_MAX - SDE_STAGE_0 - 1)
+				zpos_max = SDE_STAGE_MAX - SDE_STAGE_0 - 1;
+		}
+	} else if (plane->type != DRM_PLANE_TYPE_PRIMARY) {
+		/* reserve zpos == 0 for primary planes */
+		zpos_def = drm_plane_index(plane) + 1;
+	}
+
 	msm_property_install_range(&psde->property_info, "zpos",
 		0x0, 0, zpos_max, zpos_def, PLANE_PROP_ZPOS);
 
@@ -4853,8 +4869,6 @@ static int sde_plane_atomic_set_property(struct drm_plane *plane,
 {
 	struct sde_plane *psde = plane ? to_sde_plane(plane) : NULL;
 	struct sde_plane_state *pstate;
-	struct drm_property *fod_property;
-	int fod_val = 0;
 	int idx, ret = -EINVAL;
 
 	SDE_DEBUG_PLANE(psde, "\n");
@@ -4865,25 +4879,11 @@ static int sde_plane_atomic_set_property(struct drm_plane *plane,
 		SDE_ERROR_PLANE(psde, "invalid state\n");
 	} else {
 		pstate = to_sde_plane_state(state);
-		idx = msm_property_index(&psde->property_info,
-				property);
-		if (idx == PLANE_PROP_ZPOS) {
-			if (val & FOD_PRESSED_LAYER_ZORDER) {
-				val &= ~FOD_PRESSED_LAYER_ZORDER;
-				fod_val = 2; // pressed
-			}
-
-			fod_property = psde->property_info.
-					property_array[PLANE_PROP_CUSTOM];
-			ret = msm_property_atomic_set(&psde->property_info,
-					&pstate->property_state,
-					fod_property, fod_val);
-			if (ret)
-				SDE_ERROR("failed to set fod prop");
-		}
 		ret = msm_property_atomic_set(&psde->property_info,
 				&pstate->property_state, property, val);
 		if (!ret) {
+			idx = msm_property_index(&psde->property_info,
+					property);
 			switch (idx) {
 			case PLANE_PROP_INPUT_FENCE:
 				_sde_plane_set_input_fence(psde, pstate, val);
diff --git a/include/uapi/drm/sde_drm.h b/include/uapi/drm/sde_drm.h
index 7676aaed21dc..d241a307f4ec 100644
--- a/include/uapi/drm/sde_drm.h
+++ b/include/uapi/drm/sde_drm.h
@@ -495,9 +495,4 @@ struct sde_drm_roi_misr_v1 {
 #define SDE_RECOVERY_CAPTURE		1
 #define SDE_RECOVERY_HARD_RESET		2
 
-/**
- * sde fod dim layer
- */
-#define FOD_PRESSED_LAYER_ZORDER 0x20000000u
-
 #endif /* _SDE_DRM_H_ */
-- 
2.30.2

